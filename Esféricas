%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%Integrantes: Israel Arévalo 18267
%             Rodrigo Díaz   18265
%             Carlos Letona  18082
%
%Materia: Teoría electromagnética 1
%
%Año: 2020
%
%Descripción: Este programa grafica el potencial, campo eléctrico y densidad de superficie
%             del problema 1 de coordenadas esférica.
%
%Referencias: Las funciónes "y_callback", "Handle", "on_tab_select" y "tabContents" fueron extrídas del
%             siguiente link:https://stackoverflow.com/questions/58199830/how-do-you-create-a-uitab-or-uitabgroup
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%Código extraído de: https://stackoverflow.com/questions/58199830/how-do-you-create-a-uitab-or-uitabgroup
% in 'uitabs_octave_demo.m'

% Starting an m-file with an instruction as opposed to a 'function' keyword, 
%   interprets the m-file as a script, as opposed to a function definition. 
1;

% In octave, in-line functions need to be defined 'before' their use, as opposed
%   to matlab which demands them at the 'end' of a script.

function y_callback( Handle, Event, PlotHandle, XVal )
   YData = get( PlotHandle, 'ydata' );
   YData( XVal ) = str2num( get( Handle, 'string' ) );
   set( PlotHandle, 'ydata', YData );
end

% This is the "extra" bit we provide; since octave does not currently implement the
%   'uitabgroup' and 'uitab' functions, we provide our own definitions for them here

function Handle = uitabgroup( FigHandle, PosOpt, PosVal )
   Handle = uipanel( FigHandle, PosOpt, PosVal);
   setappdata( Handle, 'tabs_buttons', {} );
   setappdata( Handle, 'tabs_contents', {} );
end

function on_tab_select( Handle, Event, TabGroupHandle, TabContents )
   Tabs_contents = getappdata( TabGroupHandle, 'tabs_contents' )
   for i=1:length(Tabs_contents); set(Tabs_contents{i}, 'visible', 'off'); end
   set( TabContents, 'visible', 'on' );
end

function TabContents = uitab( TabGroupHandle, TitleOpt, TitleVal )
   Tabs_buttons  = getappdata( TabGroupHandle, 'tabs_buttons'  );
   Tabs_contents = getappdata( TabGroupHandle, 'tabs_contents' );
   TabContents = uipanel( TabGroupHandle, 'units', 'normalized', 'position', [ 0, 0, 1, 0.95 ] );
   TabButton   = uicontrol( TabGroupHandle, 'style', 'pushbutton' ,'string', TitleVal, 'units', 'normalized', 'position', [ length(Tabs_buttons) * 0.1, 0.95, 0.1, 0.05 ], 'callback', {@on_tab_select, TabGroupHandle, TabContents } );
   Tabs_buttons{end+1}  = TabButton;
   Tabs_contents{end+1} = TabContents;
   setappdata( TabGroupHandle, 'tabs_buttons' , Tabs_buttons );
   setappdata( TabGroupHandle, 'tabs_contents', Tabs_contents );
end

% Rest of script as before

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Condiciones iniciales
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clf
f = figure( 1 );   
set( f, 'position', [50, 50, 500, 500 ] );
tabgp = uitabgroup( f, 'position', [.0, .0, .9, .9] );
tab2 = uitab( tabgp, 'title','Potencial eléctrico');
tab1 = uitab( tabgp, 'title','Campo eléctrico');
tab3 = uitab( tabgp, 'title','Densidad eléctrica');
R = 2;
e0 = 8.84 .*10 .^-12;                 %Permeabilidad relativa del vacío

%%
%Gráficas cuando r<R
%%

%Cálculo de constantes r<R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax = axes (tab2);
[r,theta] = meshgrid(0:0.1:2,0:pi./6:2.*pi);
A1 = (3 .*R.^3) ./(10 .*e0);
B1 = (3 ./(10 .*e0));%listo
A3 = (12 .*R.^5)./(35.*e0);
B3 = 12 .*R.^5./(e0.*35);%listo
%Gráfica del potencial r<R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
subplot(2,1,1,ax);
Vin = B1.*r.*cos(theta) - B3.*(r.^3).*(((5 .*(cos(theta)).^3)-(3 .*cos(theta)))./2);
C = r.*theta;
[x,y] = pol2cart(theta,r);
surf(ax,x,y,Vin,C);
axis( [-10, 10, -10, 10 ] );
title( 'Potencial eléctrico r<R', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Vin");
%Gráfica del campo r<R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax1 = axes (tab1);
subplot(2,1,1,ax1);%Cambiar
Ein = gradient(-Vin);
[Einx,Einy] = gradient(Vin);%Cambiar
C = Einx + Einy;%Cambiar
[x,y] = pol2cart(theta,r);
quiver3(ax1,x,y,Ein,C);%Cambiar
axis( [-10, 10, -10, 10 ] );
title( 'Campo eléctrico r<R', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Ein");

%%
%Gráficas cuando r>R
%%

%Cálculo de constantes r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax = axes (tab2);
[r,theta] = meshgrid(2:0.1:10,0:pi./6:2 .*pi);
A1 = (3 .*R.^3) ./(10 .*e0);
B1 = (3 ./(10 .*e0));%listo
A3 = (12 .*R.^5)./(35 .*e0);
B3 = 12 .*R.^5./(e0.*35);%listo
%Gráfica del potencial r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%
subplot(2,1,2,ax);
Vout = A1./r.^2 .*cos(theta) - A3./r.^4 .*(((5 .*(cos(theta)).^3)-(3 .*cos(theta)))./2);
C = r.*theta;
[x,y] = pol2cart(theta,r);
surf(ax,x,y,Vout,C);
axis( [-10, 10, -10, 10 ] );
title( 'Potencial eléctrico r>R', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Vout");
%Gráfica del campo r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax1 = axes (tab1);
subplot(2,1,2,ax1);%Cambiar
Eout = gradient(-Vout);%Cambiar
[Eoutx,Eouty] = gradient(Vout);%Cambiar
C = Eout;%Cambiar
[x,y] = pol2cart(theta,r);
quiver3(ax1,x,y,Eout,C);%Cambiar
axis( [-10, 10, -10, 10 ] );
title( 'Campo eléctrico r>R', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Eout");

%%
%Densidad
%%

ax3 = axes (tab3);
[phi, theta] = meshgrid(0:pi./60:2 .*pi,-pi./2:pi./60:pi./2);
C=-1.5.*cos(3 .*theta);
[x,y,z] = sph2cart(phi,theta,R);
surf(ax3,x,y,z,C);
colorbar;
title( 'Densidad superficial', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("z");
set(get(colorbar,'Title'),'String','Densidad')
