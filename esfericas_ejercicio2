% in 'uitabs_octave_demo.m'

% Starting an m-file with an instruction as opposed to a 'function' keyword, 
%   interprets the m-file as a script, as opposed to a function definition. 
1;

% In octave, in-line functions need to be defined 'before' their use, as opposed
%   to matlab which demands them at the 'end' of a script.

function y_callback( Handle, Event, PlotHandle, XVal )
   YData = get( PlotHandle, 'ydata' );
   YData( XVal ) = str2num( get( Handle, 'string' ) );
   set( PlotHandle, 'ydata', YData );
end

% This is the "extra" bit we provide; since octave does not currently implement the
%   'uitabgroup' and 'uitab' functions, we provide our own definitions for them here

function Handle = uitabgroup( FigHandle, PosOpt, PosVal )
   Handle = uipanel( FigHandle, PosOpt, PosVal);
   setappdata( Handle, 'tabs_buttons', {} );
   setappdata( Handle, 'tabs_contents', {} );
end

function on_tab_select( Handle, Event, TabGroupHandle, TabContents )
   Tabs_contents = getappdata( TabGroupHandle, 'tabs_contents' )
   for i=1:length(Tabs_contents); set(Tabs_contents{i}, 'visible', 'off'); end
   set( TabContents, 'visible', 'on' );
end

function TabContents = uitab( TabGroupHandle, TitleOpt, TitleVal )
   Tabs_buttons  = getappdata( TabGroupHandle, 'tabs_buttons'  );
   Tabs_contents = getappdata( TabGroupHandle, 'tabs_contents' );
   TabContents = uipanel( TabGroupHandle, 'units', 'normalized', 'position', [ 0, 0, 1, 0.95 ] );
   TabButton   = uicontrol( TabGroupHandle, 'style', 'pushbutton' ,'string', TitleVal, 'units', 'normalized', 'position', [ length(Tabs_buttons) * 0.1, 0.95, 0.1, 0.05 ], 'callback', {@on_tab_select, TabGroupHandle, TabContents } );
   Tabs_buttons{end+1}  = TabButton;
   Tabs_contents{end+1} = TabContents;
   setappdata( TabGroupHandle, 'tabs_buttons' , Tabs_buttons );
   setappdata( TabGroupHandle, 'tabs_contents', Tabs_contents );
end

% Rest of script as before

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Condiciones iniciales
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clf
f = figure( 1 );   
set( f, 'position', [50, 50, 500, 500 ] );
tabgp = uitabgroup( f, 'position', [.0, .0, .9, .9] );
tab2 = uitab( tabgp, 'title','Potencial eléctrico');
tab1 = uitab( tabgp, 'title','Campo eléctrico');
tab3 = uitab( tabgp, 'title','Densidad eléctrica');
a = 2;
b = 3;
e0 = 8.84 .*10 .^-12;                 %Permeabilidad relativa del vacío
k = 3;
phi_0 = 5;
%%
%Región 1
%%

%Cálculo de los potenciales constantes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax = axes (tab2);
[r,theta] = meshgrid(0:0.1:2,0:pi./6:2.*pi);
Ain = phi_0;
Bin = ((-b./(3.*e0)).*cos(theta) + (4.*k.*r.^2)./(15.*b.*e0).*(1.5.*cos(theta).^2-0.5));
%Gráfica del potencial r<R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
subplot(3,1,1,ax);
phi_1 = Ain + Bin;
C = r.*theta;
[x,y] = pol2cart(r,theta);
surf(ax,x,y,phi_1,C);
%colorbar
axis( [-10, 10, -10, 10 ] );
title( 'Potencial eléctrico región 1', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Vin");
%Gráfica del campo r<R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax1 = axes (tab1);
subplot(3,1,1,ax1);%Cambiar
Ein = gradient(-phi_1);
[Einx,Einy] = gradient(-phi_1);%Cambiar
%Ein = -(Einx + Einy);%Cambiar
C = Einx + Einy;%Cambiar
[x,y] = pol2cart(r,theta);
quiver3(ax1,x,y,Ein,C);%Cambiar
%colorbar
axis( [-10, 10, -10, 10 ] );
title( 'Campo eléctrico región 1', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Ein");


%%
%Región 2
%%

%Cálculo de constantes r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax = axes (tab2);
[r,theta] = meshgrid(2:0.1:10,0:pi./6:2 .*pi);
Aout = a./r.*phi_0;
Bin = ((-b./(3 .*e0)).*cos(theta) + (4 .*k.*r.^2)./(15 .*b.*e0).*(1.5 .*(cos(theta)).^2-0.5));
%Gráfica del potencial r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%
subplot(3,1,2,ax);
phi_2 = Aout + Bin;
C = r.*theta;
[x,y] = pol2cart(r,theta);
surf(ax,x,y,phi_2,C);
%colorbar
axis( [-10, 10, -10, 10 ] );
title( 'Potencial eléctrico región 2', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Vout");
%Gráfica del campo r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax1 = axes (tab1);
subplot(3,1,2,ax1);%Cambiar
Eout = gradient(-phi_2);%Cambiar
[Eoutx,Eouty] = gradient(Vout);%Cambiar
C = Eout;%Cambiar
[x,y] = pol2cart(r,theta);
quiver3(ax1,x,y,Eout,C);%Cambiar
%colorbar
axis( [-10, 10, -10, 10 ] );
title( 'Campo eléctrico región 2', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Eout");

%%
%Región 3
%%

%Cálculo de constantes r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax = axes (tab2);
[r,theta] = meshgrid(2:0.1:10,0:pi./6:2 .*pi);
Aout = a./r.*phi_0;
Bout = ((-(b).^2./(3 .*e0.*r)).*cos(theta) + (4 .*k.*b.^4)./(15 .*(r.^3).*e0).*(1.5.*(cos(theta)).^2-0.5));
%Gráfica del potencial r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%
subplot(3,1,3,ax);
phi_3 = Aout + Bout;
C = r.*theta;
[x,y] = pol2cart(r,theta);
surf(ax,x,y,phi_3,C);
%colorbar
axis( [-10, 10, -10, 10 ] );
title( 'Potencial eléctrico región 3', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Vout");
%Gráfica del campo r>R
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax1 = axes (tab1);
subplot(3,1,3,ax1);%Cambiar
Eout = gradient(-phi_3);%Cambiar
[Eoutx,Eouty] = gradient(Vout);%Cambiar
C = Eout;%Cambiar
[x,y] = pol2cart(r,theta);
quiver3(ax1,x,y,Eout,C);%Cambiar
%colorbar
axis( [-10, 10, -10, 10 ] );
title( 'Campo eléctrico región 3', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("Eout");


%%
%Densidad
%%

ax3 = axes (tab3);
[phi, theta] = meshgrid(0:pi./60:2 .*pi,-pi./2:pi./60:pi./2);
C=k*cos(2 .*theta);
[x,y,z] = sph2cart(phi,theta,R);
surf(ax3,x,y,z,C);
colorbar;
title( 'Densidad superficial', 'fontsize', 10, 'fontweight', 'normal' );
xlabel("x");
ylabel("y");
zlabel("z");
set(get(colorbar,'Title'),'String','Densidad')
